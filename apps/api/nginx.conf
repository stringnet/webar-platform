# Configuración de Nginx para producción - Actúa como proxy inverso para la API de NestJS

server {
    # Nginx escuchará en el puerto 80 dentro del contenedor
    listen 80;

    # Es una buena práctica definir el server_name
    server_name apiwebra.scanmee.io;

    # Aumenta el tamaño máximo del cuerpo de la petición a 50MB (útil para subida de archivos grandes)
    client_max_body_size 50M;

    # Esta es la regla clave para todo el tráfico
    location / {
        # --- Manejo explícito de CORS preflight ---
        # Responde directamente a las peticiones OPTIONS para validar CORS.
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://adminwebra.scanmee.io';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # --- Proxy a la aplicación NestJS ---
        # Para todas las demás peticiones (GET, POST, etc.), se las pasamos a la app.
        proxy_pass http://localhost:3000;
        
        # --- Cabeceras (Headers) recomendadas para el proxy ---
        # Estas líneas aseguran que la aplicación NestJS reciba la información correcta del cliente original
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
